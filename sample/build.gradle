plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.sebaslogen.resacaapp"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        buildToolsVersion versions.buildTools
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures { // Enables Jetpack Compose for this module
        compose = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeCompiler
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation project(":resacahilt")

    implementation "androidx.core:core-ktx:$versions.coreKtx"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleViewModel"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinxCoroutines"
    implementation "androidx.activity:activity-compose:$versions.activityCompose"

    // Compose dependencies
    implementation "androidx.compose.compiler:compiler:$versions.composeCompiler"
    implementation platform("androidx.compose:compose-bom:$versions.composeBOM")
    implementation "androidx.compose.ui:ui"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling"
    implementation "androidx.compose.ui:ui-tooling-preview"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation"
    // Material Design
    implementation "androidx.compose.material:material"

    // Compose integration with ViewModels
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$versions.lifecycleViewModel"
    implementation "androidx.navigation:navigation-compose:$versions.navigation"

    // Hilt dependencies
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"


    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.kotlinxCoroutines"
    testImplementation "org.robolectric:robolectric:$versions.robolectric"
    // Test rules and transitive dependencies:
    testImplementation("androidx.compose.ui:ui-test-junit4")
    // Needed for createComposeRule, but not createAndroidComposeRule:
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    testImplementation("com.google.dagger:hilt-android-testing:$versions.hilt")
    kaptTest("com.google.dagger:hilt-android-compiler:$versions.hilt")

}

tasks.matching { it instanceof Test }.all { // Show more test execution information
    testLogging.events = ["failed", "passed", "skipped"]
    testLogging.exceptionFormat "full"
}